//  HERE ARE COMMON FUNCTIONS AND VARIABLES

//-------- CONSTANTS --------//

//IRC colors
ircgreen    = [ result ( concatword "g" $arg1 ) ] //green    
ircblue     = [ result ( concatword "b" $arg1 ) ] //blue     
ircyellow   = [ result ( concatword "y" $arg1 ) ] //yellow   
ircred      = [ result ( concatword "r" $arg1 ) ] //red      
ircgrey     = [ result ( concatword "a" $arg1 ) ] //grey     
ircmagenta  = [ result ( concatword "m" $arg1 ) ] //magenta  
ircorange   = [ result ( concatword "o" $arg1 ) ] //orange   
irccyan     = [ result ( concatword "c" $arg1 ) ] //cyan     
ircviolet   = [ result ( concatword "v" $arg1 ) ] //violet   
ircpurple   = [ result ( concatword "p" $arg1 ) ] //purple   
ircbrown    = [ result ( concatword "n" $arg1 ) ] //brown   
ircdgrey	= [ result ( concatword "d" $arg1 ) ] //dark grey
ircreset	= [ result ( concatword "u" $arg1 ) ] //reset to normal color

//Server colors
green 	= [ result ( concatword "^f0" $arg1 ) ] // green: player talk
blue 	= [ result ( concatword "^f1" $arg1 ) ] // blue: "echo" command
yellow 	= [ result ( concatword "^f2" $arg1 ) ] // yellow: gameplay messages
red 	= [ result ( concatword "^f3" $arg1 ) ] // red: important errors
gray 	= [ result ( concatword "^f4" $arg1 ) ] // gray: not important messages
magenta	= [ result ( concatword "^f5" $arg1 ) ] // magenta: auth color
orange	= [ result ( concatword "^f6" $arg1 ) ] // countdown color
white 	= [ result ( concatword "^f7" $arg1 ) ] // default color
std     = [ result ( concatword "^fr" $arg1 ) ] // resets to default color ( white )

//Server staff

MODENAMES = "ffa coop teamplay insta instateam effic efficteam tac tacteam capture regencapture ctf instactf protect instaprotect hold instahold efficctf efficprotect effichold collect instacollect efficcollect"

TEAMMODES = "teamplay instateam efficteam tacteam capture regencapture ctf instactf efficctf protect instaprotect efficprotect hold instahold effichold instacolelct efficcollect"

FLAGMODES = "ctf instactf efficctf protect instaprotect efficprotect hold instahold effichold"

CTFMODES = "ctf instactf efficctf"

KILLMODES = "teamplay instateam efficteam tacteam capture regencapture"

EFFICMODES = "effic efficteam efficctf efficprotect effichold efficcollect"

DISABLED-NAMES = "hure yousuck bitchass nigger nigga kinderficker didisucksdicks WhoAmI? unknown-bitch kike polake motherfucker suckmydick ? jude kanake polake wichser wixxer wixer DonaldTrump AdolfHitler HeinrichHimmler JosephGoebbels OskarSchindler"

DISALLOWED-WORDS = "nigger nigga negro kike faggot motherfucker jude wichser wixxer kanake polake kinderficker fuckyou fucking-kid jerk kurwa. Kurwa. Kurva. kurva. kurva kurwa Kurwa Kurva niga niggaz halde-babba nazi jew Adolf Hitler DonaldTrump"

PRIVNAMES = "none master master admin root"


//-------- SOME USEFUL FUNCTIONS --------//

//////////////////
// Convert mode number to string. Uses $MODENAMES
// @arg1 mode number
// @group server
// @return mode name
// @example (modetostr 0) //returns ffa
modetostr = [
	result (at $MODENAMES $arg1)
]
//////////////////
// Checks if list contains specified item
// @group server
// @arg1 List
// @arg2 item to check
// @return 1 if list contains the item, otherwise 0
// @example isinlist "1 2 3" "3" //returns 1
isinlist = [ 
	result (!= (indexof $arg1 $arg2) -1) 
]

//////////////////
// Returns list of client numbers of all connected players
// @group player
// @return list of cn
allplayers = [ 
	result (listclients) 
]

//////////////////
// Returns client numbers of all active players (not spectators)
// @group player
// @return list of players' cn
allactiveplayers = [
	all = (listclients)
	res = ""
	looplist cn $all [
		if (&& (= (playerexists $cn) 1) (= (isspectator $cn) 0)) [
			res = (concat $res $cn)
		]
	]
	result $res
]

//////////////////
// Returns KpD (kills per deathes) of player
// @group player
// @arg1 cn of player
// @return float number
getkpd = [
	deathes = (getdeaths $arg1)
	frags = (getfrags $arg1)
	
	result (? $deathes (divf (div (* 10 $frags) $deathes) 10) (? $frags $frags 0))
]

//////////////////
// Return number of stealed frags (works correct only in effic, difference between real damange and number of frags)
// @group player
// @arg1 cn
// @return number
getstealfrags = [
    frags = (+ (getfrags $arg1) (getsuicides $arg1))
    damage = (getdamage $arg1)    
    should_frags = (div $damage 200) // 200 is damage per kill in effic
    result (- $frags $should_frags)
]

//////////////////
// Returns formatted and colored "usage" string for specified command
// @group server
// @arg1 command name
// @return usage  string 
usage = [ 
	result (concatword "^f7Usage: ^f4" $commandchar (commandhelp $arg1))
]

//////////////////
// Prints specified string to output (log) with timestamp
// @group server
// @arg1 string
// @return [timestamp] string  
log = [
	echo (format "[%1] %2" (systimef "%Y-%m-%d %X") $arg1)
]

//////////////////
// Prints error message to output (log) with timestamp
// @group server
// @arg1 string
// @example log_error "Could not create DB connection"  
log_error = [
	echo (format "[%1] [ERROR] %2" (systimef "%Y-%m-%d %X") $arg1)
]

//////////////////
// Prints warning message to output (log) with timestamp
// @group server
// @arg1 string
// @example log_warn "SQLite could be wery slow on module 'spy', please use MySQL instead"  
log_warn = [
	echo (format "[%1] [WARN] %2" (systimef "%Y-%m-%d %X") $arg1)
]

//////////////////
// Prints info message to output (log) with timestamp
// @group server
// @arg1 string
// @example log_info "Make install, not war"
log_info = [
	echo (format "[%1] [INFO] %2" (systimef "%Y-%m-%d %X") $arg1)
]

//////////////////
// Execute all .cfg files in directory
// @group server
// @arg1 directory
execdir = [
	dir = $arg1
	i = 0
	loopfiles f $dir cfg [		
		file = (format "%1/%2.cfg" $dir $f) 
		//log (format "executing '%1'" $file)
		exec $file
		i = (+ $i 1)
 	]
	log_info (format "executed %1 files in '%2'" $i $dir)		
]

//////////////////
// Convert milliseconds to time string
// @group server
// @arg1 milliseconds
// @return %d days %h hours %m minutes
millistostr = [
	res = ""
	if (>= (div $arg1 86400000) 1) [
		res = (formatmillis "%d days %h hours %m minutes" $arg1)
	] [
		if (>= (div $arg1 3600000) 1) [
			res = (formatmillis "%h hours %m minutes" $arg1)
		] [
			if (>= (div $arg1 60000) 1) [
				res = (formatmillis "%m minutes" $arg1)	
			]
		]
	]
	result $res
]

//////////////////
// Initialize vaiable $arg1 with default value $arg2 if it's not initialized yet
// @group server
// @arg1 vaiable
// @arg2 default value
// @example defaultvalue "var_name" "value" // if there is no $var_name before this call, does $var_name = "value" 
defaultvalue = [
	if (=s "" (getalias $arg1)) [
		alias $arg1 $arg2
	] 
]

//////////////////
// Prettify escaped list (add commas) with unescaped list items
// @group server
// @arg1 escaped list
// @example prettyescapedlist "|RB|degrave |RB|^^o_o^^ ^"strangenickname^"^^" // returns  |RB|degrave, |RB|^o_o^, "strangenickname"^
prettyescapedlist = [
	res = ""
	first = 1
	log_info $arg1
	looplist v $arg1 [
		if $first [
			first = 0
			res = (unescape $v)
		] [
			res = (concatword $res ", " (unescape $v))
		]
	]
	result $res
]

//////////////////
// Concatenate string with commas 
// @group server
// @arg1 string
// @arg2 new item
// @example concatwithcommas "item1" "item2" // returns "item1, item2"
concatwithcommas = [
	res = ""
	if (=s "" $arg1) [
		res = $arg2
	] [
		res = (concatword $arg1 ", " $arg2)
	]
	result $res
]

//////////////////
// Deprecated set client privelege
// @group server
// @arg1 cn
// @arg2 priv
setmaster = [
	cn = $arg1
	val = $arg2
	
	log_warn "setmaster is deprecated, please use setpriv instead"
	setpriv $cn $val
]

//////////////////
// Deprecated set client privelege
// @group player
// @arg1 priv
// @return privelege name
privname = [ result (at $PRIVNAMES $arg1) ]

//////////////////
// Check if server in team mode
// @group server
// @return 1 if team mode, otherwise 0
isteammode = [ if (= (isinlist $TEAMMODES (modetostr (getmode))) 1) [ result 1 ] [ result 0 ] ]

//////////////////
// Check if server in flag mode
// @group server
// @return 1 if team mode, otherwise 0
isflagmode = [ if (= (isinlist $FLAGMODES (modetostr (getmode))) 1) [ result 1 ] [ result 0 ] ]

//////////////////
// Check if server in ctf mode
// @group server
// @return 1 if team mode, otherwise 0
isctfmode = [ if (= (isinlist $CTFMODES (modetostr (getmode))) 1) [ result 1 ] [ result 0 ] ]

/////////////////
// isadmin 
// returns 1, if player ( $arg2 ) is admin
// returns 0, if not
isadministrator = [

	perm = ( getperm $arg2 )
	
	if ( = $perm 3 ) [
	
		result 1
		
		] [
		
		result 0
		
		]
		
]

/////////////////
// ismaster
// returns 1, if player ( $arg2 ) is master
// returns 0, if not
isinmastermode = [

	perm = ( getperm $arg2 )

	if ( = $perm 2 ) [
	
	result 1
	
	] [
	
	result 0
	
	]
	
]

/////////////////
// isnormal
// returns 1, if player ( $arg2 ) is normal player ( without advanced privileges )
// returns 0, if not
isnormal = [

	perm = ( getperm $arg2 )

	if ( = $perm 1 ) [
	
	result 1
	
	] [
	
	result 0
	
	]
	
]

/////////////////
// getprivilege 
// gets privilege-name of player and return it
// $arg1 - player

getprivilege = [

if ( = ( getperm $arg1 ) 3 ) [

	result Administrator
	
	] [
	
if ( = ( getperm $arg1 ) 2 ) [

	result Master 
	
	] [
	
if ( = ( getperm $arg1 ) 1 ) [

	result Normal
	
			]
			
		]
		
	]
	
]

/////////////////
// allbots
// returns number of bots

allbots = [

number_bots = 0

all = ( allplayers )
looplist cn $all [

if ( >= $cn 128 ) [

number_bots = ( + $number_bots 1 ) 

		]
		
	]

	result $number_bots
	
]

/////////////////
// isbot
// returns 1, if player is bot, else 0

isbot = [ if ( >= $arg1 128 ) [ result 1 ] [ result 0 ] ]

/////////////////
// return
// more cpp like command to return value or leave function
// 1 | 0

return =  [

result $arg1

]

/////////////////



getvkmslimit = [

	if ( = $arg1 1 ) [
	result 100 
	
	] [
	
	if ( = $arg1 4 ) [
	
	result 2
	
	] [
	
	if ( = $arg1 5 ) [
	
	result 2 
	
	] [
	
	if ( = $arg1 6 ) [
	
	result 3
	
	] [
	
	if ( = $arg1 7 ) [
	
	result 4 
	
	] [
	
	if ( = $arg1 8 ) [
	
	result 4
	
	] [
	
	if ( = $arg1 9 ) [
	
	result 5 
	
	] [
	
	if ( = $arg1 10 ) [
	
	result 5
	
	] [
	
	if ( = $arg1 11 ) [
	
	result 6 
	
	] [
	
	if ( = $arg1 12 ) [
	
	result 6
	
	] [
	
	if ( = $arg1 13 ) [
	
	result 7 
	
	] [
	
	if ( = $arg1 14 ) [
	
	result 7
	
	] [
	
	if ( = $arg1 15 ) [
	
	result 8 
	
	] [
	
	if ( = $arg1 16 ) [
	
	result 8
	
	] [
	
	if ( = $arg1 17 ) [
	
	result 9 
	
	] [
	
	if ( = $arg1 18 ) [
	
	result 9
	
	] [
	
	if ( = $arg1 19 ) [
	
	result 10

	] [
	
	if ( = $arg1 20 ) [
	
	result 10
	
	] [
	
	if ( = $arg1 21 ) [
	
	result 6 
	
	] [
	
	if ( = $arg1 22 ) [
	
	result 11
	
	] [
	
	if ( = $arg1 23 ) [
	
	result 11 
	
	] [
	
	if ( = $arg1 24 ) [
	
	result 12
	
	] [
	
	if ( = $arg1 25 ) [
	
	result 12 
	
	] [
	
	if ( = $arg1 26 ) [
	
	result 13
	
	] [
	
	if ( = $arg1 27 ) [
	
	result 13 
	
	] [
	
	if ( = $arg1 28 ) [
	
	result 14
	
	] [
	
	if ( = $arg1 29 ) [
	
	result 14 
	
	] [
	
	if ( = $arg1 30 ) [
	
	result 15
	
	] [
	
	if ( = $arg1 31 ) [
	
	result 15 
	
	] [
	
	if ( = $arg1 32 ) [
	
	result 16
	
	] [
	
	if ( = $arg1 33 ) [
	
	result 16 
	
	] [
	
	if ( = $arg1 34 ) [
	
	result 17
	
	] [
	
	if ( = $arg1 35 ) [
	
	result 17 
	
	] [
	
	if ( = $arg1 36 ) [
	
	result 18
	
	] [
	
	if ( = $arg1 37 ) [
	
	result 18	
	
	] [
	
	if ( = $arg1 38 ) [
	
	result 19
	
	] [
	
	if ( = $arg1 39 ) [
	
	result 19 
	
	] [
	
	if ( = $arg1 40 ) [
	
	result 20
	
	] [
	
	if ( = $arg1 41 ) [
	
	result 20 
	
	] [
	
	if ( = $arg1 42 ) [
	
	result 21
	
	] [
	
	if ( = $arg1 43 ) [
	
	result 22 
	
	] [
	
	if ( = $arg1 44 ) [
	
	result 22
	
	] [
	
	if ( = $arg1 45 ) [
	
	result 23 
	
	] [
	
	if ( = $arg1 46 ) [
	
	result 23
	
	] [
	
	if ( = $arg1 47 ) [
	
	result 24 
	
	] [
	
	if ( = $arg1 48 ) [
	
	result 24
	
	] [
	
	if ( = $arg1 49 ) [
	
	result 25 
	
	] [
	
	if ( = $arg1 50 ) [
	
	result 25
	
	] [
	
	if ( = $arg1 51 ) [
	
	result 26 
	
	] [
	
	if ( = $arg1 52 ) [
	
	result 26
	
	] [
	
	if ( = $arg1 53 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 54 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 55 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 56 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 57 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 58 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 59 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 60 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 61 ) [
	
	result 31 
	
	] [
	
	if ( = $arg1 62 ) [
	
	result 2
	
	] [
	
	if ( = $arg1 63 ) [
	
	result 2 
	
	] [
	
	if ( = $arg1 64 ) [
	
	result 3
	
	] [
	
	if ( = $arg1 65 ) [
	
	result 4 
	
	] [
	
	if ( = $arg1 66 ) [
	
	result 4
	
	] [
	
	if ( = $arg1 67 ) [
	
	result 5 
	
	] [
	
	if ( = $arg1 68 ) [
	
	result 5
	
	] [
	
	if ( = $arg1 69 ) [
	
	result 6 
	
	] [
	
	if ( = $arg1 70 ) [
	
	result 6
	
	] [
	
	if ( = $arg1 71 ) [
	
	result 7 
	
	] [
	
	if ( = $arg1 72 ) [
	
	result 7
	
	] [
	
	if ( = $arg1 73 ) [
	
	result 8 
	
	] [
	
	if ( = $arg1 74 ) [
	
	result 8
	
	] [
	
	if ( = $arg1 75 ) [
	
	result 9 
	
	] [
	
	if ( = $arg1 76 ) [
	
	result 9
	
	] [
	
	if ( = $arg1 77 ) [
	
	result 10

	] [
	
	if ( = $arg1 78 ) [
	
	result 10
	
	] [
	
	if ( = $arg1 79 ) [
	
	result 6 
	
	] [
	
	if ( = $arg1 80 ) [
	
	result 11
	
	] [
	
	if ( = $arg1 81 ) [
	
	result 11 
	
	] [
	
	if ( = $arg1 82 ) [
	
	result 12
	
	] [
	
	if ( = $arg1 83 ) [
	
	result 12 
	
	] [
	
	if ( = $arg1 84 ) [
	
	result 13
	
	] [
	
	if ( = $arg1 85 ) [
	
	result 13 
	
	] [
	
	if ( = $arg1 86 ) [
	
	result 14
	
	] [
	
	if ( = $arg1 87 ) [
	
	result 14 
	
	] [
	
	if ( = $arg1 88 ) [
	
	result 15
	
	] [
	
	if ( = $arg1 89 ) [
	
	result 15 
	
	] [
	
	if ( = $arg1 90 ) [
	
	result 16
	
	] [
	
	if ( = $arg1 91 ) [
	
	result 16 
	
	] [
	
	if ( = $arg1 92 ) [
	
	result 17
	
	] [
	
	if ( = $arg1 93 ) [
	
	result 17 
	
	] [
	
	if ( = $arg1 94 ) [
	
	result 18
	
	] [
	
	if ( = $arg1 95 ) [
	
	result 18	
	
	] [
	
	if ( = $arg1 96 ) [
	
	result 19
	
	] [
	
	if ( = $arg1 97 ) [
	
	result 19 
	
	] [
	
	if ( = $arg1 98 ) [
	
	result 20
	
	] [
	
	if ( = $arg1 99 ) [
	
	result 20 
	
	] [
	
	if ( = $arg1 100 ) [
	
	result 21
	
	] [
	
	if ( = $arg1 101 ) [
	
	result 22 
	
	] [
	
	if ( = $arg1 102 ) [
	
	result 22
	
	] [
	
	if ( = $arg1 103 ) [
	
	result 23 
	
	] [
	
	if ( = $arg1 104 ) [
	
	result 23
	
	] [
	
	if ( = $arg1 105 ) [
	
	result 24 
	
	] [
	
	if ( = $arg1 106 ) [
	
	result 24
	
	] [
	
	if ( = $arg1 107 ) [
	
	result 25 
	
	] [
	
	if ( = $arg1 108 ) [
	
	result 25
	
	] [
	
	if ( = $arg1 109 ) [
	
	result 26 
	
	] [
	
	if ( = $arg1 110 ) [
	
	result 26
	
	] [
	
	if ( = $arg1 111 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 112 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 113 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 114 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 115 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 116 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 117 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 118 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 119 ) [
	
	result 31 
	
	] [
	
	if ( = $arg1 120 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 121 ) [
	
	result 27 
	
	] [
	
	if ( = $arg1 122 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 123 ) [
	
	result 28 
	
	] [
	
	if ( = $arg1 124 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 125 ) [
	
	result 29 
	
	] [
	
	if ( = $arg1 127 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 128 ) [
	
	result 30 
	
	] [
	
	if ( = $arg1 129 ) [
	
	result 31 
	
]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	
	







