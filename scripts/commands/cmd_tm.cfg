// tournament module for buddymod - starts tournament mode
// made by /BudSpencer (2016)
// very impressive and complex ;)

// added support of pausing game, if player leavs server ( must be unspectated )

//numclients = (numclients)
//cn = (getcn $cn)
default = $maxclients
defmpass = $masterpass
defapass = $adminpass
defbotlimit = $serverbotlimit
minclients = 2

chk_tournament = 0
chk_spell_tournament = 0


ident = [

			if ( < (numclients) $minclients ) [
				pm $arg1 (format "^f1>>> ^f4Here are too less ^f2players ^f4to battle! A tournament is ^f2IMPOSSIBLE ^f4at this time! Try again, when at least ^f2%1 ^f4players are connected to server. ^f1<<<" $minclients )
				chk_tournament = 0
				][
					mastermode 2[
					serverbotlimit 0 // sets botlimit to 0
					maxclients 24 // sets maxclients to 24
					adminpass tournament::temp::adminpass // changes passes
					masterpass tournament::temp::masterpass // changes passes
						all = (allactiveplayers)
							looplist cn $all [
								spectator 1 $cn
									say (format "^f1>>> ^f4Initzializing ^f2tournament module ^f4...  done! ^f1<<<")
									ircsay (format "^f1>>> ^f4Initzializing ^f2tournament module ^f4...  done! ^f1<<<")
									log (format ">>> Initzializing tournament module ...  done! <<<")
									log (format ">>> Bots are disallowed now. <<<")
									say (format "^f1>>> ^f4The tournament module has been ^f2enabled^f4, a clan or single players will ^f2battle ^f4now. ^f1<<<")
									ircsay (format "^f1>>> ^f4The tournament module has been ^f2enabled^f4, a clan or single players will ^f2battle ^f4now. ^f1<<<")
									log (format ">>> The tournament module has been enabled, a clan or single players will battle now. <<<")
										mapmode $arg3 (indexof $MODENAMES $arg2)
										pause 1
											say (format "^f1>>> ^f4The game has been ^f2paused^f4. ^f1<<<")
											ircsay (format "^f1>>> ^f4The game has been ^f2paused^f4. ^f1<<<")
											log (format ">>> The game has been paused. <<<")
											saytomaster (format "^f1>>> ^f4Now ^f2unspectate ^f4all required players by typing ^f3#^f4spec 0 <cn>. ^f1<<<")
											saytoadmin (format "^f1>>> ^f4Now ^f2unspectate ^f4all required players by typing ^f3#^f4spec 0 <cn>. ^f1<<<")
										   ]
								]
			    ]
]



reset_msg = [
	if ( = $chk_tournament 1 ) [
	    // dont modify, or the module will suck your dick!
			saytoadmin (format "^f1>>> ^f4Bots are ^f2allowed ^f4now. Have fun! Next Time! ^f1<<<")
				ircsay (format "^f1>>> ^f4Bots are ^f2allowed ^f4now. Have fun! Next Time! ^f1<<<")
				log (format ">>> Bots are allowed now. Have fun! Ciao! <<<")
	]
]


intermission_message = [

	if ( = $chk_tournament 1 ) [
		say (format "^f1>>> ^f4The Tournament has ^f2ended^f4! Good Game! ^f1<<<")
		ircsay (format "^f1>>> ^f4The Tournament has ^f2ended^f4! Good Game! ^f1<<<")
		log (format ">>> The Tournament has ended! Good Game! <<<")
	] [
		say (format "^f1>>> ^f4The Game has ^f2ended^f4! Good Game! ^f1<<<")
		ircsay (format "^f1>>> ^f4The Game has ^f2ended^f4! Good Game! ^f1<<<")
		log (format ">>> The Game has ended! Good Game! <<<")
		]
	chk_tournament = 0
	chk_spell_tournament = 0
]

mastermode_autochange = [

	if ( = $chk_tournament 1 ) [ // only if tournament is currently running
	serverbotlimit $defbotlimit
	maxclients $default //  sets maxclients to default ( server-init.cfg )
	adminpass $defapass //  sets adminpass to default ( server-init.cfg )
	masterpass $defmpass //  sets masterpass to default ( server-init.cfg )
	mastermode -1
	saytomaster (format "^f1>>> ^f4The mastermode has ^f2changed ^f4to ^f2auth(-1)^f4. ^f1<<<")
    saytoadmin (format "^f1>>> ^f4The mastermode has ^f2changed ^f4to ^f2auth(-1)^f4. ^f1<<<")
	ircsay (format "^f1>>> ^f4The mastermode has ^f2changed ^f4to ^f2auth(-1)^f4. ^f1<<<")
	log (format ">>> The mastermode has changed to auth(-1). <<<")
	]
	
] 


enabled = 1

// command script
cmd_tournament = [
if ( = $enabled 0 ) [
    pm $arg1 (format "^f1>>> ^f4This command is ^f2DISABLED^f4! ^f1<<<")
    ] [
	pigvar = 0  // disable, when pigmode is enabled
		if ( = $chk_tournament 0 ) [
			if ( = (strstr $MODENAMES $arg2) -1 ) [
				pm $arg1 (format "^f1>>> ^f4Sorry, this is a ^f2wrong argument^f4: %1 ^f1<<<" $arg2) 
			] [
			chk_tournament = 1
			// chk_spell_tournament = 1
			ident
			]
		] [
			pm $arg1 (format "^f1>>> ^f4Oh, i think, a ^f2tournament ^f4already have been ^f2initiated^f4. ^f1<<<")
			]
	]
]

mapstart_msg = [
	if ( = $chk_tournament 0 ) [
		saytomaster (format "^f1>>> ^f4You can ^f2start ^f4a new ^f2tournament ^f4now. ^f1<<<")
		saytoadmin (format "^f1>>> ^f4You can ^f2start ^f4a new ^f2tournament ^f4now. ^f1<<<")
		ircsay (format "^f1>>> ^f4A new ^f2tournament ^f4can be ^f2started ^f4now. ^f1<<<")
		log (format ">>> A new tournament can be started now. <<<")
	]
] 

// script, that pauses game, if somebody leavs tournament 
// added by /BudSpencer (2016)
enable_pause_script = 1
enable_msg = 1

pause_if_somebody_leave = [
if ( = $chk_tournament 1 ) [
if ( = $enable_pause_script 1 ) [
if ( = $enable_msg 1 ) [
if ( = ( isspectator $arg1 ) 0 ) [
pause 1 

	pname = ( getname $arg1 )
	pcn = ( getcn $arg1 )
	
say (format "^f1>>> ^f4Player ^f2%1(%2) ^f4left ^f2tournament^f4. Game is ^f2paused ^f4now. ^f1<<<" $pname $pcn )
				]
			]
		]
	]
]





// event handlers
addhandler ondisconnect pause_if_somebody_leave // works fine ;)
addhandler onimission mastermode_autochange
addhandler onimission reset_msg
addhandler onimission intermission_message
addhandler onmapstart mapstart_msg


// command register
registercommand "tm" cmd_tournament 2 "ww" "tm <mode> <map> ^f2This command starts my impressive tournament module ;)."





// END OF SCRIPT \\