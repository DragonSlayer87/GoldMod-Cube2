//
// Project: GoldMod Collect
// File Name: MapFight.cfg
// Date: 2016
// Author: BudSpencer
// 
// Purpose: Map fight - vote for next map by typing 1, 2 or 3
// NOTE: a bit complicated ... :(
//



maplist_deathmatch = [
complex douze ot academy metl2 metl3 justice turbine hashi mbt2 fanatic_quake dock renegade curvy_castle nmp8 tartech aard3c
skrdm1 bvdm_01 outpost park tumwalk industry injustice mbt10 curvedm kalking1 hog2 kffa fragplaza collusion duel8 alithia island
frozen memento neondevastation alloy ruine DM_BS1 shinmei1 osiris sdm1 powerplant oasis metl4 ruby shindou dune gubo teahupoo
rm5 depot masdm orbe torment legazzo fury mbt9 refuge shadowed dirtndust force killfactory moonlite castle_trap orion ogrosupply
nucleus elegy shiva arbana simplicity pitch_black duel7 suburb roughinery stemple tejen pgdm deathtek hades corruption paradigm lostinspace
sauerstruck phosgene neonpanic akaritori konkuri-to katrez_d oddworld guacamole wake5 frostbyte thor aqueducts ksauer1 kmap5 thetowers darkdeath wdcd 
]

maplist_ctf = [ 
hallo flagstone tempest siberia reissen tejen shipwreck authentic urban_c bt_falls valhalla garden mbt1 autumn akroseum face-capture dust2
mach2 evilness turbulence l_ctf twinforts berlin_wall mbt12 europium abbey redemption damnation forge campo nitro infamy catch22 subterra
forgotten nucleus bad_moon snapper_rocks haste spcr asgard mill capture_night arbana hidden eternal_valley mercury kopenhagen tortuga mbt4 core_refuge core_transfer 
desecration recovery wdcd suburb xenon sacrifice 
]

maplist_cap = [ 
urban_c nevil_c fb_capture collusion c_valley lostinspace fc3 face-capture nmp4 nmp8 hallo tempest monastery alithia hades fc4 relic
fc5 paradigm corruption asteroids ogrosupply reissen akroseum turbulence frostbyte c_egypt caribbean dust2 campo dirtndust damnation arabic spcr
nucleus evilness subterra snapper_rocks kopenhagen asgard mbt12 cwcastle nitro suburb haste valhalla abbey venice mercury core_transfer hidden 
forge eternal_valley tortuga core_refuge infamy capture_night river_c serenity xenon nmp9 ph-capture killcore3 twinforts duomo donya
]

map1 = ""
map2 = ""
map3 = ""
vote_map1 = 0
vote_map2 = 0
vote_map3 = 0
winnerMap = ""
winnerVotes = 0
hasvoted_list = []
randmap = [ result ( at $arg1 ( rnd ( listlen $arg1 ) ) ) ]
equal12 = [ result ( = $vote_map1 $vote_map2 ) ]
equal13 = [ result ( = $vote_map1 $vote_map3 ) ]
equal23 = [ result ( = $vote_map2 $vote_map3 ) ]
maplist = ""
winner__ = ""
isrealwinner = 0
issingle = 0
h = -1 ; l = -1 ; m = -1 ; l_ = ""
gethighest = [ l_ = ( format "%1 %2 %3" $vote_map1 $vote_map2 $vote_map3 ) ; result ( max ( at $l_ ( rnd ( listlen $l_ ) ) ) ( at $l_ ( rnd ( listlen $l_ ) ) ) ( at $l_ ( rnd ( listlen $l_ ) ) ) ) ]
getlowest = [ l_ = ( format "%1 %2 %3" $vote_map1 $vote_map2 $vote_map3 ) ; result ( max ( at $l_ ( rnd ( listlen $l_ ) ) ) ( at $l_ ( rnd ( listlen $l_ ) ) ) ( at $l_ ( rnd ( listlen $l_ ) ) ) ) ]
getmedium = [
	if ( && ( > ( gethighest ) $vote_map2 ) ( < ( getlowest ) $vote_map2 ) ) [ result $vote_map2 ] 
	if ( && ( > ( gethighest ) $vote_map1 ) ( < ( getlowest ) $vote_map1 ) ) [ result $vote_map1 ]
	if ( && ( > ( gethighest ) $vote_map3 ) ( < ( getlowest ) $vote_map3 ) ) [ result $vote_map3 ]
]

getwinner = [
	if ( && ( != $vote_map1 $vote_map2 ) ( != $vote_map2 $vote_map3 ) ( != $vote_map1 $vote_map3 ) ) [ // if all three vote values are different
		case ( max $vote_map1 $vote_map2 $vote_map3 ) $vote_map1 [ 
			isrealwinner = 1 ; issingle = 0 ; result ( format "%1 %2" $map1 $vote_map1 )
		] $vote_map2 [
			isrealwinner = 1 ; issingle = 0 ; result ( format "%1 %2" $map2 $vote_map2 )
		] $vote_map3 [
			isrealwinner = 1 ; issingle = 0 ; result ( format "%1 %2" $map3 $vote_map3 )
		]
	] [
	if ( && ( = $vote_map1 $vote_map2 ) ( = $vote_map2 $vote_map3 ) ( = $vote_map1 $vote_map3 ) ) [ // if everything is same
		maplist = ( format "%1 %2 %3" $map1 $map2 $map3 ) ; isrealwinner = 0 ; issingle = 0 ; winnerMap = ( at $maplist ( rnd ( listlen $maplist ) ) ) 
		if ( =s $winnerMap $map1 ) [ winnerVotes = $vote_map1 ] [ if ( =s $winnerMap $map2 ) [ winnerVotes = $vote_map2 ] [ winnerVotes = $vote_map3 ] ]
			result $winnerMap
	] [ 
		if ( && ( || ( equal12 ) ( equal13 ) ( equal23 ) ) ( > ( + ( getlowest ) ( getmedium ) ) 0 ) ) [
		maplist = ( format "%1 %2 %3" $map1 $map2 $map3 ) ; isrealwinner = 0 ; issingle = 0 ; winnerMap = ( at $maplist ( rnd ( listlen $maplist ) ) ) 
		if ( =s $winnerMap $map1 ) [ winnerVotes = $vote_map1 ] [ if ( =s $winnerMap $map2 ) [ winnerVotes = $vote_map2 ] [ winnerVotes = $vote_map3 ] ]
			result $winnerMap
		] [
			isrealwinner = 1 ; issingle = 1
			winnerVotes = ( max $vote_map1 $vote_map2 $vote_map3 ) 
			result $winnerVotes
			]
		]
	]
]

getwinnermap = [
	if $isrealwinner [
		case ( getwinner ) $vote_map1 [
			winnerMap = $map1
			winnerVotes = $vote_map1
		] $vote_map2 [
			winnerMap = $map2 
			winnerVotes = $vote_map2
		] $vote_map3 [
			winnerMap = $map3
			winnerVotes = $vote_map3
		]
		result $winnerMap
	]
]
		
		

isWorking = 0
isimission = 0
pick_map = [ at $arg1 ( rnd ( listlen $arg1 ) ) ]
msg = "[^f3MAP^f4FIGHT^f7] ^f7Player ^f3%1(%2) ^f7voted for map ^f4%3^f7. Votes: ^f4%4 - ^f4%5 ^f7Votes / ^f4%6 ^f7- ^f4%7 ^f7Votes / ^f4%8 ^f7- ^f4%9 ^f7Votes" 

MapVote_Init = [
isWorking = 1
isimission = 1
	// pick 3 random maps -> sometimes two or all three picked maps are the same (last is very rarely)
	if ( > ( indexof $DM-MODES ( modetostr ( getmode ) ) ) -1 ) [ map1 = ( pick_map $maplist_deathmatch ) ; map2 = ( pick_map $maplist_deathmatch ) ; map3 = ( pick_map $maplist_deathmatch ) ; ] [
	if ( > ( indexof $CAPTURE-MODES ( modetostr ( getmode ) ) ) -1 ) [ map1 = ( pick_map $maplist_cap ) ; map2 = ( pick_map $maplist_cap ) ; map3 = ( pick_map $maplist_cap ) ; ] [ 
	if ( > ( indexof $CTF-MODES ( modetostr ( getmode ) ) ) -1 ) [ map1 = ( pick_map $maplist_ctf ) ; map2 = ( pick_map $maplist_ctf ) ; map3 = ( pick_map $maplist_ctf ) ; ] ] ]
		say ( format "[^f3MAP^f4FIGHT^f7] Vote for maps ^f3%1 ^f7or ^f3%2 ^f7or ^f3%3 ^f7with ^f41^f7, ^f42 ^f7or ^f43^f7." $map1 $map2 $map3 )
		sleep ( -f $imissiontime 5000 ) [ getwinner ; getwinnermap ; if ( = $isimission 1 ) [ if ( ! $isrealwinner ) [ say ( format "[^f3MAP^f4FIGHT^f7] No ^f3map ^f7wins! ^f7I pick ^f4%1 ^f7as next map!" $winnerMap ) ; isWorking = 0 ] [ if ( = $issingle 1 ) [ say ( format "[^f3MAP^f4FIGHT^f7] Winner: ^f3%1 ^f7with ^f4%2 ^f7votes." $winnerMap $winnerVotes ) ; isWorking = 0 ] [ winnerMap = ( at ( getwinner ) 0 ) ; winnerVotes = ( at ( getwinner ) 1 ) ; say ( format "[^f3MAP^f4FIGHT^f7] Winner: ^f3%1 ^f7with ^f4%2 ^f7votes." $winnerMap $winnerVotes ) ; isWorking = 0 ] ] ] ]
		sleep ( -f $imissiontime 3000 ) [ if ( = $isimission 1 ) [ mapmode $winnerMap ( getmode ) ] ] // set next map as ( at ( getWinner ) 0 ) returned 
]

MapVote_Count = [
if ( && ( = $isWorking 1 ) ( = $isimission 1 ) ) [
	if ( = ( indexof $hasvoted_list ( getip $arg1 ) ) -1 ) [
		cases $arg2 "1" [
			vote_map1 = ( + $vote_map1 1 )
			say ( format $msg ( getname $arg1 ) $arg1 $map1 $map1 $vote_map1 $map2 $vote_map2 $map3 $vote_map3 )
		] "2" [
			vote_map2 = ( + $vote_map2 1 )
			say ( format $msg ( getname $arg1 ) $arg1 $map2 $map1 $vote_map1 $map2 $vote_map2 $map3 $vote_map3 )
		] "3" [
			vote_map3 =  ( + $vote_map3 1 )
			say ( format $msg ( getname $arg1 ) $arg1 $map3 $map1 $vote_map1 $map2 $vote_map2 $map3 $vote_map3 )
		]
			if ( || ( || ( =s $arg2 "1" ) ( =s $arg2 "2" ) ) ( =s $arg2 "3" ) ) [ hasvoted_list = ( listadd $hasvoted_list ( getip $arg1 ) ) ]
			] [
				if ( || ( || ( =s $arg2 "1" ) ( =s $arg2 "2" ) ) ( =s $arg2 "3" ) ) [ pm $arg1 ( format "[^f3MAP^f4FIGHT^f7] You already ^f3voted ^f7for a ^f4map^f7. You can't vote ^f4again^f7." ) ]
		]
	]
]

reset_vals = [ map1 = "" ; map2 = "" ; map3 = "" ; vote_map1 = 0 ; vote_map2 = 0 ; vote_map3 = 0 ; hasvoted_list = [] ; winnerMap = "" ; winnerVotes = 0 ; list = "" ; rand = -1 ; isimission = 0 ; maplist = "" ; winner__ = "" ; isrealwinner = 0 ; issingle = 0 ; l_ = "" ]

addhandler "onmapstart" reset_vals
addhandler "ontext" MapVote_Count
addhandler "onimission" MapVote_Init
