// duel mode - duel between 2 players - doesnt support bots
// Author: /BudSpencer ( 2016 )
// supports autopause after leaving, and autounspeccing ( and resuming ) after reconnecting -> with resume countdown


duelmode = 0
duelmodewalk = 0
countdown_time = 5 // in seconds
wait_time = 2 // in seconds
ip_player1 = ""
ip_player2 = ""
mm = -1
spec_all = [ all = ( allactiveplayers ) ; looplist cn $all [ spectator 1 $cn ] ]

// start duel 
Duel_Init = [
	mm = ( getmastermode )
	if ( = $duelmode 0 ) [
	duelmode = 1 ; activator = ( getname $arg1 ) ; player1 = ( getname $arg2 ) ; player2 = ( getname $arg3 ) ; duelmode_ = $arg4 ; duelmap = $arg5 ; ip_player1 = ( getip $arg2 ) ; ip_player2 = ( getip $arg3 ) ;
	if ( < ( numclients ) 2 ) [ pm $arg1 ( format "^f7Here aren't enough players for a ^f3duel^f7. You need at least ^f42 ^f7players." ) ; duelmode = 0 ] [
	if ( = $arg2 $arg3 ) [ pm $arg1 ( format "A player can't duel against ^f3himself^f7. ^f7You need to type different ^f4cn's^f7." ) ; duelmode = 0 ] [ 
	if ( ! ( isinlist $DUELMODES ( modetostr $arg4 ) ) ) [ pm $arg1 ( concat "You can't duel on that ^f3mode^f7. Valid Duel Modes are: ^f4" $DUELMODES ) ; duelmode = 0 ] [
	if ( || ( > $arg2 127 ) ( > $arg3 127 ) [ pm $arg1 ( format "You can't play against a ^f3bot^f7. You need to type a cn ^f4< 128^f7." ) ; duelmode = 0 ] [
	if ( || ( ! ( playerexists $arg2 ) ) ( ! ( playerexists $arg3 ) ) ) [ pm $arg1 ( format "This Player doesn't ^f3exist^f7. You need to type existing ^f4players^f7." ) ; duelmode = 0 ] [
	duelmode = 1 ; pause 1 ; mastermode 2 ; setpriv $arg2 2 ; setpriv $arg3 2 ; say ( format "Player ^f3%1(%2) ^f7started a duel^f7. Players are ^f4%3(%4) ^f7and ^f4%5(%6)^f7 and they play on ^f4%7 ^f7/ ^f4%8^f7." $activator $arg1 $player1 $arg2 $player2 $arg3 $duelmode_ $duelmap )
	asleep ( * $countdown_time 1000 ) [ mapmode $duelmap ( ( indexof $MODENAMES $duelmode_ ) ) ; pause 1 ; say ( format "[ ^f7Waiting for ^f3players ^f7to finish ^f4map loading ^f7... ]" ) ; asleep ( + ( * $countdown_time 1000 ) 2000 ) [ say ( format "Duel was ^f3started^f7. Good ^f4luck ^f7and have ^f4fun^f7." ) ; pause 0 ] ; asleep 2000 [ loop i ( - $countdown_time 1 ) [ asleep ( * ( + $i 1 ) 1000 ) [ say ( format "^f7Duel will ^f3start ^f7in ^f4%1 ^f7seconds ..." ( - @countdown_time ( + @i 1 ) ) ) ] ] ] ] ]
	loop i ( - $countdown_time 1 ) [ asleep ( * ( + $i 1 ) 1000 ) [ say ( format "^f7Map will ^f3change ^f7in ^f4%1 ^f7seconds ..." ( - @countdown_time ( + @i 1 ) ) ) ] ]
					]
				]
			]
		] 
	] [
		pm $arg1 ( format "You can't ^f3start ^f7a new duel^f7 if a ^f4duel ^f7is already running^f7." )
	]
] 


reset_var = [ if ( = $duelmode 1 ) [ duelmode = 0 ; duelmodewalk = 0 ; mastermode $mm ] ]
pause_if_somebody_leave = [ if ( = $duelmode 1 ) [ if ( != ( isspectator $arg1 ) 1 ) [ pause 1 ; say ( format "Player ^f3%1(%2) ^f7disconnected^f7. Maybe he ^f4ragequit^f7. We'll wait until he come ^f4back^f7." ( getname $arg1 ) $arg1 ) ] ] ]
pause_if_somebody_spec = [ if ( = $duelmode 1 ) [ if ( != ( isspectator $arg1 ) 0 ) [ pause 1 ; say ( format "Player ^f3%1(%2) ^f7is spectated^f7. Unspectate him and ^f4resume(type: #pause 0) ^f7duel." ( getname $arg1 ) $arg1 ) ] ] ]
resume_countdown = [ say ( format "^f7Game will continue in ^f3%1 ^f7seconds, prepare ^f4yourself^f7." $resumedelay ) ; asleep ( * $resumedelay 1000 ) [ say ( format "^f7Game is ^f3resumed^f7. ^f4Have Fun^f7!" ) ; pause 0 ] ; loop n ( - $resumedelay 1 ) [ asleep ( * ( + $n 1 ) 1000 ) [ say ( format "^f7Continue in ^f3%1 ^f7seconds ..." ( - $resumedelay ( + @n 1 ) ) ) ] ] ]
if_player_reconnects = [ if ( = $duelmode 1 ) [ ip = ( getip $arg1 ) ; if ( || ( ( checkipbymask $ip $ip_player1 ) )  ( ( checkipbymask $ip $ip_player2 ) ) ) [ say ( format "Player ^f3%1(%2) ^f7is a player of the current ^f4duel^f7, he'll unspectated ^f4automatically^f7." ) ; spectator 0 $arg1 ; setpriv $arg1 2 ; resume_countdown ] ] ]
show_scores = [ if ( = $duelmode 1 ) [ looplist cn__ ( allactiveplayers ) [ if ( = ( getrank $cn__ ) 1 ) [ winner = ( getname $cn__ ) ; winner_ = ( getfrags $cn__ ) ; winner__ = ( getcn $cn__ ) ] [ if ( = ( getrank $cn__ ) 2 ) [ loser_ = ( getfrags $cn__ ) ] ] ] ; say ( format "Duel has ^f3ended^f7. ^nResult of ^f3duel^f7: ^f4%1 ^f7: ^f4%2^f7 - The Winner is ^f4%3(%4)^f7. Congratulations!" $winner_ $loser_ $winner $winner__ ) ] ]
		
addhandler "onconnect" if_player_reconnects 
addhandler "onimission" show_scores
addhandler "ondisconnect" pause_if_somebody_leave
addhandler "onspectator" pause_if_somebody_spec
addhandler "onimission" reset_var
registercommand "duel" Duel_Init 1 "ccww" "duel <cn1> <cn2> <mode> <map> ^f3That module allows you to start a duel for 2 players. (e.g. #duel 0 1 insta turbine) -> would start a duelÃ¶ with cn 0 and 1 on insta turbine."

// old (not working correctly): show_scores_ = [ if ( = $duelmode 1 ) [ winner_ = -1 ; winner = "" ; winner__ = -1 ; loser_ = -1 ; loser = "" ; loser__ = -1 ; ip_player1 = "" ; ip_player2 = "" ; loop i 2 [ looplist cn ( allactiveplayers ) [ if ( > ( getfrags $cn ) $winner_ ) [ winner_ = ( getfrags $cn ) ; winner = ( getname $cn ) ; winner__ = ( getcn $cn ) ] [ loser_ = ( getfrags $cn ) ; loser = ( getname $cn ) ; loser__ = ( getcn $cn ) ] ] ] ; say ( format "Duel has ^f3ended^f7. ^nResult of ^f3duel^f7: ^f4%1 ^f7: ^f4%2^f7 - The Winner is ^f4%3(%4)^f7. Congratulations!" $winner_ $loser_ $winner $winner__ ) ] ]

	