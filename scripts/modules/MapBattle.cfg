// Mapbattle Module - player can vote for maps
// made by /BudSpencer ( 2016 )
// will be updated soon


defaultvalue "enable_mapbattle" 1 
defaultvalue "vote_limit" 5


MapBattle = [

mapbattle = 1

sleep ( - $imissiontime 2000 ) [

mapbattle = 0

]

say ( format "^f7It's ^f3MapBattle^f7. ^f7Type your ^f4Map ^f7into console ^f7to ^f4vote ^f7for it^f7." )

Ident_Text = [

if ( = $mapbattle 1 ) [

hasvotedformap = ( getvar $arg1 hasvoted )
	
if ( = ( getvar $arg1 hasvoted ) 0 ) [

if ( = ( isinlist $MAPS $arg2 ) 0 ) [

	pm $arg1 ( format "^f7The ^f7Map ^f3'%1' ^f7isn't in ^f4Server Maplist^f7. Choose another ^f4Map^f7." $arg2 )
	
	] [
	
if ( = ( isinlist $MAPS $arg2 ) 1 ) [

	pname = ( getname $arg1 )
	pcn = ( getcn $arg1 )
	map_choose = $arg2
	
	votemap = ( getvar $arg2 votes )
	votemap = ( + $votemap 1 )
	setvar $arg2 votes $votemap
	
	// hasvotedformap = ( getvar $arg1 hasvoted )
	// hasvotedformap = ( + $hasvotedformap 1 )
		
	say ( format "^f7Player ^f3%1(%2) ^f7voted for Map ^f3'%3'^f7. Type ^f4%3 ^f7into console to ^f4vote ^f7for that ^f4Map^f7. Votes are ^f4%4 ^f7of ^f4%5^f7." $pname $pcn $map_choose $votemap $vote_limit )
	// setvar $arg1 hasvoted 1
	
	if ( >= ( getvar $arg2 votes ) $vote_limit ) [
	
	say ( format "^f7The MapBattle ^f3Winner ^f7of this round ^f7is: ^f4%1" $arg2 )

	all = ( allplayers ) 
		looplist cn $all [
		
		setvar $cn hasvoted 0 // resets vars for all players
		setvar $arg2 votes 0
		
									]
									
								] 
								
							]
							
						]
						
					]
					
				]
				
			] [
			
			pm $arg1 ( format "^f7The ^f3MapBattle ^f7is ^f4over^f7 for this intermission. Wait until next ^f4Intermission^f7." )
			setvar $arg1 hasvoted 0
			
		]
	
	addhandler "ontext" Ident_Text
	
	sleep ( - $imissiontime 1999 ) [

	if ( > ( getvar $arg2 votes ) $votemap ) [
	
	say ( format "^f7Mapbattle is ^f3over^f7. No ^f4Map ^f7wins^f7." )
	
		]
		
	]

]




addhandler "onimission" MapBattle
	
	
	